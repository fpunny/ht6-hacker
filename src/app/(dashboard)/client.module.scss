@use '@/styles/mixins';
@use '@/styles/colors';

.navLinks {
  counter-reset: navLinks;
  $self: &;

  &__item {
    justify-content: flex-start;

    &--active #{$self}__label::after {
      content: '';
      background-color: currentColor;
      border-radius: 9999rem;
      margin: auto 0 -0.5rem;
      inset: 0;
      position: absolute;
      height: 0.25rem;
      width: 100%;
    }
  }

  &__label {
    counter-increment: navLinks;
    position: relative;

    &::before {
      content: counter(navLinks) '.';
      margin-right: mixins.spacing(2x-sm);
    }
  }
}

.form {
  width: 100%;
  max-width: 50rem;
  box-sizing: border-box;
  padding: mixins.spacing(huge) mixins.spacing(x-big);

  &__body {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: mixins.spacing(big) mixins.spacing(m);

    > *[data-full] {
      grid-column: span 2;
    }

    > *[data-start] {
      grid-column-start: 1;
    }
  }

  &__back {
    border-radius: 0;
    padding: 0;
  }

  &__hr {
    background-color: colors.getColor(neutral, 400);
    margin: 0;
    border: none;
    width: 100%;
    height: 0.125rem;
  }
}
