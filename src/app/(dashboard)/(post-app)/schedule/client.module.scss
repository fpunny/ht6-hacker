@use '@/styles/colors';
@use '@/styles/mixins';

.container {
  background-color: colors.getColor(secondary, 700, $alpha: 0.06);
  border-radius: mixins.spacing(x-big);
  padding: mixins.spacing(sm) mixins.spacing(4x-big) mixins.spacing(x-big);
}

.tabs {
  border-bottom: 0.0625rem solid colors.getColor(secondary, 700);
}

.tab {
  position: relative;
  border-radius: 0;
  border: 0;
  flex: 1;

  &.active {
    transition: none !important;
    &::after {
      position: absolute;
      background-color: currentColor;
      border-radius: 9999px;
      margin: 0;
      inset: auto auto -0.125rem;
      content: '';
      width: 100%;
      height: 0.25rem;
    }
  }
}

.grid {
  display: grid;
  grid-template-columns: 6rem repeat(6, 1fr);
  grid-gap: mixins.spacing(x-sm);
  grid-template-rows: repeat(
    calc(var(--rows) * var(--periods, 1)),
    calc(11rem / var(--periods, 1))
  );
}

.hour {
  grid-row: calc(var(--row) * var(--periods, 1) + 1) / span var(--periods, 1);
  padding-top: mixins.spacing(2x-sm);
  grid-column: 1;
}

.event {
  @include mixins.transition(background-color);
  background-color: colors.getColor(shade, 0);
  cursor: pointer;
  text-align: start;
  appearance: none;
  border: none;
  padding: 0;
  border-bottom-right-radius: mixins.spacing(sm);
  border-top-right-radius: mixins.spacing(sm);

  display: grid;
  grid-template-columns: 1rem auto;

  grid-row: var(--row, 1) / span var(--span, 1);
  grid-column: span calc(6 / var(--overlap, 1));

  &::before {
    content: '';
    height: 100%;
    width: 100%;
    background-color: var(--color);
  }

  &.active {
    background-color: var(--color);
  }
}

.content {
  padding: mixins.spacing(big);

  & * {
    @include mixins.transition(color);
    color: colors.getColor(secondary, 700);

    .active & {
      color: colors.getColor(shade, 0);
    }
  }
}

.popup {
  display: none;
  padding: mixins.spacing(3x-big);
  width: calc(100% - mixins.spacing(x-lg));
  box-sizing: border-box;
  border-radius: mixins.spacing(m);
  box-shadow: 0 0 mixins.spacing(lg) rgba(0, 0, 0, 0.05);
  border: none;
  max-width: 40rem;

  &:popover-open {
    display: flex;
  }

  &::backdrop {
    backdrop-filter: blur(mixins.spacing(2x-sm));
  }
}

.heading {
  position: relative;
  padding-bottom: mixins.spacing(x-sm);

  &::after {
    content: '';
    position: absolute;
    background-color: var(--color);
    height: mixins.spacing(2x-sm);
    margin: auto 0 0;
    border-radius: 9999px;
    inset: 0;
    width: 100%;
    max-width: 6.5rem;
  }
}

.line {
  margin: 0;
}

.icon {
  margin-top: 0.25rem;
}

.description {
  line-height: 1.5;
}
